diff --git a/cmake/SearchForStuff.cmake b/cmake/SearchForStuff.cmake
index ec11ca17a5..91b9d08e6e 100644
--- a/cmake/SearchForStuff.cmake
+++ b/cmake/SearchForStuff.cmake
@@ -196,8 +196,8 @@ if (PKG_CONFIG_FOUND)
   if (USE_EXTERNAL_TINYXML)
     pkg_check_modules(tinyxml tinyxml)
     if (NOT tinyxml_FOUND)
-        find_path (tinyxml_INCLUDE_DIRS tinyxml.h ${tinyxml_INCLUDE_DIRS} ENV CPATH)
-        find_library(tinyxml_LIBRARIES NAMES tinyxml)
+        find_path (tinyxml_INCLUDE_DIRS tinyxml.h ${tinyxml_INCLUDE_DIRS} ENV CPATH HINTS "${CMAKE_PREFIX_PATH}/include/")
+        find_library(tinyxml_LIBRARIES NAMES tinyxml HINTS "${CMAKE_PREFIX_PATH}/lib/")
         set (tinyxml_FAIL False)
         if (NOT tinyxml_INCLUDE_DIRS)
           message (STATUS "Looking for tinyxml headers - not found")
@@ -342,7 +342,7 @@ if (PKG_CONFIG_FOUND)
   if (OGRE-RTShaderSystem_FOUND)
     set(ogre_ldflags ${OGRE-RTShaderSystem_LDFLAGS})
     set(ogre_include_dirs ${OGRE-RTShaderSystem_INCLUDE_DIRS})
-    set(ogre_libraries ${OGRE-RTShaderSystem_LIBRARIES})
+    set(ogre_libraries ${OGRE-RTShaderSystem_LINK_LIBRARIES})
     set(ogre_library_dirs ${OGRE-RTShaderSystem_LIBRARY_DIRS})
     set(ogre_cflags ${OGRE-RTShaderSystem_CFLAGS})
 
@@ -367,6 +367,7 @@ if (PKG_CONFIG_FOUND)
     list(APPEND OGRE_LIBRARIES ${OGRE_Terrain_LIBRARIES})
     list(APPEND OGRE_LIBRARIES ${OGRE_Overlay_LIBRARIES})
     list(APPEND OGRE_LIBRARIES ${OGRE_Paging_LIBRARIES})
+    set(OGRE_LINK_LIBRARIES OGRE_LIBRARIES)
   endif ()
 
   if (NOT OGRE_FOUND)
@@ -374,7 +375,7 @@ if (PKG_CONFIG_FOUND)
   else ()
     set(ogre_ldflags ${ogre_ldflags} ${OGRE_LDFLAGS})
     set(ogre_include_dirs ${ogre_include_dirs} ${OGRE_INCLUDE_DIRS})
-    set(ogre_libraries ${ogre_libraries};${OGRE_LIBRARIES})
+    set(ogre_libraries ${ogre_libraries};${OGRE_LINK_LIBRARIES})
     set(ogre_library_dirs ${ogre_library_dirs} ${OGRE_LIBRARY_DIRS})
     set(ogre_cflags ${ogre_cflags} ${OGRE_CFLAGS})
   endif ()
@@ -383,7 +384,7 @@ if (PKG_CONFIG_FOUND)
   if (OGRE-Terrain_FOUND)
     set(ogre_ldflags ${ogre_ldflags} ${OGRE-Terrain_LDFLAGS})
     set(ogre_include_dirs ${ogre_include_dirs} ${OGRE-Terrain_INCLUDE_DIRS})
-    set(ogre_libraries ${ogre_libraries};${OGRE-Terrain_LIBRARIES})
+    set(ogre_libraries ${ogre_libraries};${OGRE-Terrain_LINK_LIBRARIES})
     set(ogre_library_dirs ${ogre_library_dirs} ${OGRE-Terrain_LIBRARY_DIRS})
     set(ogre_cflags ${ogre_cflags} ${OGRE-Terrain_CFLAGS})
   endif()
@@ -392,7 +393,7 @@ if (PKG_CONFIG_FOUND)
   if (OGRE-Overlay_FOUND)
     set(ogre_ldflags ${ogre_ldflags} ${OGRE-Overlay_LDFLAGS})
     set(ogre_include_dirs ${ogre_include_dirs} ${OGRE-Overlay_INCLUDE_DIRS})
-    set(ogre_libraries ${ogre_libraries};${OGRE-Overlay_LIBRARIES})
+    set(ogre_libraries ${ogre_libraries};${OGRE-Overlay_LINK_LIBRARIES})
     set(ogre_library_dirs ${ogre_library_dirs} ${OGRE-Overlay_LIBRARY_DIRS})
     set(ogre_cflags ${ogre_cflags} ${OGRE-Overlay_CFLAGS})
   endif()
@@ -417,13 +417,7 @@ if (PKG_CONFIG_FOUND)
 
   ########################################
   # Check and find libccd (if needed)
-  pkg_check_modules(CCD ccd>=1.4)
-  if (NOT CCD_FOUND)
-    message(STATUS "Using internal copy of libccd")
-    set(CCD_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/deps/libccd/include")
-    set(CCD_LIBRARY_DIRS "${CMAKE_BINARY_DIR}/deps/libccd")
-    set(CCD_LIBRARIES gazebo_ccd)
-  endif()
+  find_package(ccd)
 
   ########################################
   # Find OpenAL
@@ -643,15 +643,16 @@ add_manpage_target()
 
 ########################################
 # Find Space Navigator header and library
-find_library(SPNAV_LIBRARY NAMES spnav)
-find_file(SPNAV_HEADER NAMES spnav.h)
-if (SPNAV_LIBRARY AND SPNAV_HEADER)
-  message(STATUS "Looking for libspnav and spnav.h - found")
-  set(HAVE_SPNAV TRUE)
-else()
-  message(STATUS "Looking for libspnav and spnav.h - not found")
-  set(HAVE_SPNAV FALSE)
-endif()
+# find_library(SPNAV_LIBRARY NAMES spnav)
+# find_file(SPNAV_HEADER NAMES spnav.h)
+# if (SPNAV_LIBRARY AND SPNAV_HEADER)
+#   message(STATUS "Looking for libspnav and spnav.h - found")
+#   set(HAVE_SPNAV TRUE)
+# else()
+#   message(STATUS "Looking for libspnav and spnav.h - not found")
+#   set(HAVE_SPNAV FALSE)
+# endif()
+set(HAVE_SPNAV FALSE)
 
 ########################################
 # Find xsltproc, which is used by tools/check_test_ran.py
diff --git a/cmake/gazebo-config.cmake.in b/cmake/gazebo-config.cmake.in
index 330c4f9da2..64be2bc458 100644
--- a/cmake/gazebo-config.cmake.in
+++ b/cmake/gazebo-config.cmake.in
@@ -128,7 +128,7 @@ endif()
 
 # Visual Studio enables c++11 support by default
 if (NOT MSVC)
-  list(APPEND @PKG_NAME@_CXX_FLAGS -std=c++11)
+  list(APPEND @PKG_NAME@_CXX_FLAGS)
 endif()
 if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" AND
     "${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
diff --git a/gazebo/gui/plot/qwt_gazebo.h b/gazebo/gui/plot/qwt_gazebo.h
index c548b91249..8063475108 100644
--- a/gazebo/gui/plot/qwt_gazebo.h
+++ b/gazebo/gui/plot/qwt_gazebo.h
@@ -23,24 +23,24 @@
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wfloat-equal"
 
-#include <qwt/qwt_curve_fitter.h>
-#include <qwt/qwt_legend.h>
-#include <qwt/qwt_painter.h>
-#include <qwt/qwt_picker_machine.h>
-#include <qwt/qwt_plot.h>
-#include <qwt/qwt_plot_canvas.h>
-#include <qwt/qwt_plot_curve.h>
-#include <qwt/qwt_plot_directpainter.h>
-#include <qwt/qwt_plot_grid.h>
-#include <qwt/qwt_plot_layout.h>
-#include <qwt/qwt_plot_magnifier.h>
-#include <qwt/qwt_plot_marker.h>
-#include <qwt/qwt_plot_panner.h>
-#include <qwt/qwt_plot_zoomer.h>
-#include <qwt/qwt_scale_engine.h>
-#include <qwt/qwt_scale_widget.h>
-#include <qwt/qwt_symbol.h>
-#include <qwt/qwt_plot_renderer.h>
+#include <qwt_curve_fitter.h>
+#include <qwt_legend.h>
+#include <qwt_painter.h>
+#include <qwt_picker_machine.h>
+#include <qwt_plot.h>
+#include <qwt_plot_canvas.h>
+#include <qwt_plot_curve.h>
+#include <qwt_plot_directpainter.h>
+#include <qwt_plot_grid.h>
+#include <qwt_plot_layout.h>
+#include <qwt_plot_magnifier.h>
+#include <qwt_plot_marker.h>
+#include <qwt_plot_panner.h>
+#include <qwt_plot_zoomer.h>
+#include <qwt_scale_engine.h>
+#include <qwt_scale_widget.h>
+#include <qwt_symbol.h>
+#include <qwt_plot_renderer.h>
 
 #pragma clang diagnostic pop
 
diff --git a/gazebo/msgs/CMakeLists.txt b/gazebo/msgs/CMakeLists.txt
index cc19f5fa1e..f69aee5276 100644
--- a/gazebo/msgs/CMakeLists.txt
+++ b/gazebo/msgs/CMakeLists.txt
@@ -142,6 +142,13 @@ gz_build_tests(${msgs_tests_sources} EXTRA_LIBS gazebo_msgs)
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 
 add_executable(gazebomsgs_out generator/GazeboGenerator.cc generator/gazebo_generator.cc)
+set_target_properties(gazebomsgs_out
+  PROPERTIES
+    BUILD_WITH_INSTALL_RPATH TRUE
+    SKIP_BUILD_RPATH FALSE
+    INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib"
+)
+
 target_link_libraries(gazebomsgs_out ${GZ_PROTOBUF_LIBRARY} ${GZ_PROTOBUF_PROTOC_LIBRARY})
 if (UNIX)
   target_link_libraries(gazebomsgs_out pthread)
diff --git a/gazebo/rendering/CMakeLists.txt b/gazebo/rendering/CMakeLists.txt
index 6c98d22f35..6d7ee9c7b0 100644
--- a/gazebo/rendering/CMakeLists.txt
+++ b/gazebo/rendering/CMakeLists.txt
@@ -235,7 +235,9 @@ if (HAVE_OCULUS)
 endif()
 
 if (NOT APPLE AND NOT WIN32)
-  target_link_libraries(gazebo_rendering X11)
+  find_package(X11 REQUIRED)
+  include_directories(${X11_INCLUDE_DIR})
+  target_link_libraries(gazebo_rendering ${X11_LIBRARIES})
 endif()
 
 if (USE_PCH)
diff --git a/gazebo/util/CMakeLists.txt b/gazebo/util/CMakeLists.txt
index 2c69f2b250..93f93a37d1 100644
--- a/gazebo/util/CMakeLists.txt
+++ b/gazebo/util/CMakeLists.txt
@@ -80,7 +80,7 @@ target_link_libraries(gazebo_util
   gazebo_common
   gazebo_transport
   gazebo_msgs
-  ${tinyxml2_LIBRARIES}
+  ${tinyxml2_LINK_LIBRARIES}
   ${IGNITION-TRANSPORT_LIBRARIES}
   ${IGNITION-MSGS_LIBRARIES}
 )
diff --git a/plugins/rest_web/RestApi.cc b/plugins/rest_web/RestApi.cc
index f1852f0c13..f4b7546c5f 100644
--- a/plugins/rest_web/RestApi.cc
+++ b/plugins/rest_web/RestApi.cc
@@ -18,7 +18,7 @@
 #include <cstring>
 #include <stdlib.h>
 #include <curl/curl.h>
-#include <inttypes.h>
+#include <cinttypes>
 
 #include "RestApi.hh"
 
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 2209d57990..d151103e40 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -67,6 +67,12 @@ if (UNIX)
   target_link_libraries(gz pthread)
 endif()
 
+if (APPLE)
+  find_package(BZip2 REQUIRED)
+  find_package(ZLIB REQUIRED)
+  target_link_libraries(gz ${BZIP2_LIBRARIES} ${ZLIB_LIBRARIES})
+endif()
+
 gz_install_executable(gz)
 
 if (NOT WIN32)
diff --git a/gazebo/gui/model/ModelTreeWidget.cc b/gazebo/gui/model/ModelTreeWidget.cc
index 860b930a5f..f8175e1e98 100644
--- a/gazebo/gui/model/ModelTreeWidget.cc
+++ b/gazebo/gui/model/ModelTreeWidget.cc
@@ -15,6 +15,8 @@
  *
 */
 
+#include <boost/bind.hpp>
+
 #include "gazebo/common/Events.hh"
 
 #include "gazebo/gui/GuiEvents.hh"

